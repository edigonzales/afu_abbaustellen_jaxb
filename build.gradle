plugins {
    id 'java'
    id 'application'
}

apply from: "gradle/versioning.gradle"

group = 'ch.so.agi'
sourceCompatibility = '8'

configurations {
    jaxb
    developmentOnly
    runtimeClasspath {
        extendsFrom developmentOnly
    }
}

repositories {
    jcenter()
}

task genJaxb {
    ext.sourcesDir = "${buildDir}/generated-sources/jaxb"
    ext.classesDir = "${buildDir}/classes/jaxb"
    ext.schema = "src/main/resources/xsd/SO_AFU_Abbaustellen_20200918.xsd"

    outputs.dir classesDir

    doLast() {
        project.ant {
            taskdef name: "xjc", classname: "com.sun.tools.xjc.XJCTask",
                    classpath: configurations.jaxb.asPath
            mkdir(dir: sourcesDir)
            mkdir(dir: classesDir)

            xjc(destdir: sourcesDir, schema: schema, binding: "src/main/resources/xsd/binding.xjb") {
                arg(value: "-extension")
                produces(dir: sourcesDir, includes: "**/*.java")
            }

            javac(destdir: classesDir, source: 8, target: 8, debug: true,
                    debugLevel: "lines,vars,source", includeantruntime: false,
                    classpath: configurations.jaxb.asPath) {
                src(path: sourcesDir)
                include(name: "**/*.java")
                include(name: "*.java")
            }

            copy(todir: classesDir) {
                fileset(dir: sourcesDir, erroronmissingdir: false) {
                    exclude(name: "**/*.java")
                }
            }
        }
    }
}

dependencies {
    implementation 'com.google.guava:guava:29.0-jre'
    
    compile group: 'javax.xml.bind',name:'jaxb-api', version:'2.3.1'
    compile group: 'com.sun.xml.bind',name:'jaxb-core', version:'2.3.0.1'
    compile group: 'com.sun.xml.bind',name:'jaxb-impl', version:'2.3.2'
    compile group: 'javax.activation', name: 'activation', version: '1.1.1'
    
    jaxb("org.glassfish.jaxb:jaxb-xjc:2.3.2")
    compile(files(genJaxb.classesDir).builtBy(genJaxb))

    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.6.2'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.6.2'
}

application {
    mainClassName = 'ch.so.agi.App'
}

test {
    useJUnitPlatform()
}
